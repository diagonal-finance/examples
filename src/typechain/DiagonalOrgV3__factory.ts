/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  ethers,
} from 'ethers'
import type { PromiseOrValue } from './common'
import type { DiagonalOrgV3, DiagonalOrgV3Interface } from './DiagonalOrgV3'

const _abi = [
  {
    inputs: [],
    name: 'BatchRequestTooBig',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ContractAlreadyInitialized',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ContractNotInitializing',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidChargeBatchInput',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidChargeSignatureVerification',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidUpdateOwnerSignatureVerification',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidUpdateReceiverSignatureVerification',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidUpdateSignerSignatureVerification',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidWithdrawSignatureVerification',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotDiagonalBot',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotDiagonalRegistry',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SafeCallError',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SafeCallOperationNotSuccessful',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'newAdmin',
        type: 'address',
      },
    ],
    name: 'OwnerUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'newReceiver',
        type: 'address',
      },
    ],
    name: 'ReceiverUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'newSigner',
        type: 'address',
      },
    ],
    name: 'SignerUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'fee',
        type: 'uint256',
      },
    ],
    name: 'WithdrawSuccessful',
    type: 'event',
  },
  {
    inputs: [],
    name: 'HASHED_NAME',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'HASHED_VERSION',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'TOKEN_FEE_RECIPIENT',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'TYPE_HASH',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'bytes32',
            name: 'id',
            type: 'bytes32',
          },
          {
            internalType: 'address',
            name: 'source',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'token',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
        ],
        internalType: 'struct Charge',
        name: 'chargeRequest',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'uint8',
            name: 'v',
            type: 'uint8',
          },
          {
            internalType: 'bytes32',
            name: 'r',
            type: 'bytes32',
          },
          {
            internalType: 'bytes32',
            name: 's',
            type: 'bytes32',
          },
        ],
        internalType: 'struct Signature',
        name: 'signature',
        type: 'tuple',
      },
    ],
    name: 'charge',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'bytes32',
            name: 'id',
            type: 'bytes32',
          },
          {
            internalType: 'address[]',
            name: 'sources',
            type: 'address[]',
          },
          {
            internalType: 'address[]',
            name: 'tokens',
            type: 'address[]',
          },
          {
            internalType: 'uint256[]',
            name: 'amounts',
            type: 'uint256[]',
          },
        ],
        internalType: 'struct ChargeBatch',
        name: 'chargeRequest',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'uint8',
            name: 'v',
            type: 'uint8',
          },
          {
            internalType: 'bytes32',
            name: 'r',
            type: 'bytes32',
          },
          {
            internalType: 'bytes32',
            name: 's',
            type: 'bytes32',
          },
        ],
        internalType: 'struct Signature',
        name: 'signature',
        type: 'tuple',
      },
    ],
    name: 'chargeBatch',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'chargeNonces',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'bytes32',
            name: 'id',
            type: 'bytes32',
          },
          {
            internalType: 'address',
            name: 'source',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'token',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
        ],
        internalType: 'struct Charge',
        name: 'chargeRequest',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'uint8',
            name: 'v',
            type: 'uint8',
          },
          {
            internalType: 'bytes32',
            name: 'r',
            type: 'bytes32',
          },
          {
            internalType: 'bytes32',
            name: 's',
            type: 'bytes32',
          },
        ],
        internalType: 'struct Signature',
        name: 'signature',
        type: 'tuple',
      },
      {
        internalType: 'bytes',
        name: 'permit',
        type: 'bytes',
      },
    ],
    name: 'chargeWithPermit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'domainSeparator',
    outputs: [
      {
        internalType: 'bytes32',
        name: 'separator',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_signer',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_receiver',
        type: 'address',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'bot',
        type: 'address',
      },
    ],
    name: 'isBot',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'nonce',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'receiver',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'signer',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint8',
            name: 'v',
            type: 'uint8',
          },
          {
            internalType: 'bytes32',
            name: 'r',
            type: 'bytes32',
          },
          {
            internalType: 'bytes32',
            name: 's',
            type: 'bytes32',
          },
        ],
        internalType: 'struct Signature',
        name: 'signature',
        type: 'tuple',
      },
    ],
    name: 'updateOwner',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newReceiver',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint8',
            name: 'v',
            type: 'uint8',
          },
          {
            internalType: 'bytes32',
            name: 'r',
            type: 'bytes32',
          },
          {
            internalType: 'bytes32',
            name: 's',
            type: 'bytes32',
          },
        ],
        internalType: 'struct Signature',
        name: 'signature',
        type: 'tuple',
      },
    ],
    name: 'updateReceiver',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newSigner',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint8',
            name: 'v',
            type: 'uint8',
          },
          {
            internalType: 'bytes32',
            name: 'r',
            type: 'bytes32',
          },
          {
            internalType: 'bytes32',
            name: 's',
            type: 'bytes32',
          },
        ],
        internalType: 'struct Signature',
        name: 'signature',
        type: 'tuple',
      },
    ],
    name: 'updateSigner',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'bytes32',
            name: 'id',
            type: 'bytes32',
          },
          {
            internalType: 'address',
            name: 'token',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'fee',
            type: 'uint256',
          },
        ],
        internalType: 'struct Withdrawal',
        name: 'withdrawRequest',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'uint8',
            name: 'v',
            type: 'uint8',
          },
          {
            internalType: 'bytes32',
            name: 'r',
            type: 'bytes32',
          },
          {
            internalType: 'bytes32',
            name: 's',
            type: 'bytes32',
          },
        ],
        internalType: 'struct Signature',
        name: 'signature',
        type: 'tuple',
      },
    ],
    name: 'withdraw',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
]

const _bytecode =
  '0x608060405234801561001057600080fd5b50611cb0806100206000396000f3fe608060405234801561001057600080fd5b50600436106101515760003560e01c8063938d559c116100cd578063d4ca702011610081578063f698da2511610066578063f698da25146102f5578063f7260d3e146102fd578063f87cd9f31461031d57600080fd5b8063d4ca7020146102c2578063eb11daed146102e257600080fd5b8063aef0c700116100b2578063aef0c70014610293578063affed0e0146102a6578063c0c53b8b146102af57600080fd5b8063938d559c1461026d578063a0ccea9b1461028057600080fd5b80633bbac5791161012457806366e1c7531161010957806366e1c753146102255780638025f8481461023a5780638da5cb5b1461024d57600080fd5b80633bbac579146101db57806364d4c819146101fe57600080fd5b8063024df4be1461015657806309b468611461019b578063238ac933146101b257806334fe6a65146101d2575b600080fd5b61017173e49b92c21efa765eda2962d88bf8a1dce6deb29d81565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6101a460025481565b604051908152602001610192565b6036546101719073ffffffffffffffffffffffffffffffffffffffff1681565b6101a460015481565b6101ee6101e9366004611844565b610330565b6040519015158152602001610192565b6101a47f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81565b610238610233366004611890565b6103a8565b005b6102386102483660046118c5565b610497565b6035546101719073ffffffffffffffffffffffffffffffffffffffff1681565b61023861027b366004611956565b610595565b61023861028e36600461199c565b6108cd565b6102386102a136600461199c565b610a61565b6101a460395481565b6102386102bd3660046119c7565b610bb8565b6101a46102d0366004611844565b60386020526000908152604090205481565b6102386102f0366004611890565b610cd1565b6101a4610f3e565b6037546101719073ffffffffffffffffffffffffffffffffffffffff1681565b61023861032b36600461199c565b610fb1565b600073723527d679ba1701faeb0d789a57f43cf11320d973ffffffffffffffffffffffffffffffffffffffff8316148061039357507304493b50ea86452f57c7526a2d7f9c5ede0a12c573ffffffffffffffffffffffffffffffffffffffff8316145b156103a057506001919050565b506000919050565b6103b133610330565b6103e7576040517f7ea2466100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103f18282611108565b6104936104046060840160408501611844565b6323b872dd6104196040860160208701611844565b60405173ffffffffffffffffffffffffffffffffffffffff9091166024820152306044820152606086013560648201526084015b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611255565b5050565b6104a033610330565b6104d6576040517f7ea2466100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104e08484611108565b61052f6104f36060860160408701611844565b83838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061125592505050565b61058f6105426060860160408701611844565b6323b872dd6105576040880160208901611844565b60405173ffffffffffffffffffffffffffffffffffffffff90911660248201523060448201526060880135606482015260840161044d565b50505050565b61059e33610330565b6105d4576040517f7ea2466100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60146105e36020840184611a0a565b9050111561061d576040517f17ca58a500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61062a6040830183611a0a565b90506106396020840184611a0a565b905014158061066457506106506060830183611a0a565b905061065f6020840184611a0a565b905014155b8061068b57506106776060830183611a0a565b90506106866040840184611a0a565b905014155b156106c2576040517f82bc615600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006107587f7be1b1ea8a69b89b484ec5de49775a85be1231e28a7b40559e1442dfc7e3316984356106f76020870187611a0a565b6107046040890189611a0a565b61071160608b018b611a0a565b6039805490600061072183611a79565b9190505560405160200161073d99989796959493929190611b2c565b6040516020818303038152906040528051906020012061135e565b9050600061077c8261076d6020860186611bc5565b85602001358660400135611424565b60365490915073ffffffffffffffffffffffffffffffffffffffff8083169116146107d3576040517f2d5ffe2500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6107e36020860186611a0a565b90508110156108c6576108b46107fc6040870187611a0a565b8381811061080c5761080c611be8565b90506020020160208101906108219190611844565b6323b872dd6108336020890189611a0a565b8581811061084357610843611be8565b90506020020160208101906108589190611844565b3061086660608b018b611a0a565b8781811061087657610876611be8565b60405173ffffffffffffffffffffffffffffffffffffffff95861660248201529490931660448501525060209091020135606482015260840161044d565b806108be81611a79565b9150506107d6565b5050505050565b6108d633610330565b61090c576040517f7ea2466100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006109837fdbbc30ca3925e649ed03f7effa68abad65a20e3b766ccee3026762c836939576846039600081548092919061094690611a79565b9190505560405160200161073d9392919092835273ffffffffffffffffffffffffffffffffffffffff919091166020830152604082015260600190565b905060006109988261076d6020860186611bc5565b60355490915073ffffffffffffffffffffffffffffffffffffffff8083169116146109ef576040517faac18c3200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b603680547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff86169081179091556040517f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c7390600090a250505050565b610a6a33610330565b610aa0576040517f7ea2466100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610ada7f0e0fa1e3b22a0c16a89c2491435ffa13dba7e189d6f89388db64d6af2cb08f71846039600081548092919061094690611a79565b90506000610aef8261076d6020860186611bc5565b60355490915073ffffffffffffffffffffffffffffffffffffffff808316911614610b46576040517fa2bcc39800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b603580547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff86169081179091556040517f4ffd725fc4a22075e9ec71c59edf9c38cdeb588a91b24fc5b61388c5be41282b90600090a250505050565b600054610100900460ff16610bf9576040517f66b9f31500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6035805473ffffffffffffffffffffffffffffffffffffffff8086167fffffffffffffffffffffffff000000000000000000000000000000000000000092831617909255603680548584169083161790556037805492841692909116919091179055604080518082018252600b81527f446961676f6e616c4f72670000000000000000000000000000000000000000006020808301919091528251808401909352600183527f310000000000000000000000000000000000000000000000000000000000000090830152610ccc9161144c565b505050565b610cda33610330565b610d10576040517f7ea2466100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610dae7f10ccffdffc15064d8cfd450345ec4b9c4748ebbfc3229b1226791643c2bb7e678435610d486040870160208801611844565b6039805460408901359160608a013591906000610d6483611a79565b9091555060408051602081019790975286019490945273ffffffffffffffffffffffffffffffffffffffff9092166060850152608084015260a083015260c082015260e00161073d565b90506000610dc38261076d6020860186611bc5565b60365490915073ffffffffffffffffffffffffffffffffffffffff808316911614610e1a576040517fe5acd7fa00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610e67610e2d6040860160208701611844565b6037546040805173ffffffffffffffffffffffffffffffffffffffff9092166024830152870135604482015263a9059cbb9060640161044d565b610eaf610e7a6040860160208701611844565b60405173e49b92c21efa765eda2962d88bf8a1dce6deb29d60248201526060870135604482015263a9059cbb9060640161044d565b60375473ffffffffffffffffffffffffffffffffffffffff16610ed86040860160208701611844565b73ffffffffffffffffffffffffffffffffffffffff167fb5b28608c1644cfa68d8dd27529f08f0b7c4130a46bbc37018a0f3eb3099ba2a86604001358760600135604051610f30929190918252602082015260400190565b60405180910390a350505050565b6000610fac600154600254604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b905090565b610fba33610330565b610ff0576040517f7ea2466100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061102a7fb014c4e89864bb48d658564256259bf6fea1baca7ddeec285bcbfc1c530a7c4d846039600081548092919061094690611a79565b9050600061103f8261076d6020860186611bc5565b60355490915073ffffffffffffffffffffffffffffffffffffffff808316911614611096576040517f13ea740300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b603780547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff86169081179091556040517f75fd3aa5d9b6e2a8a9d8894008c9263200713f4b1fa9113665e09ceac002774690600090a250505050565b60006111e97f918d170e61d8c25972b0b37320dea52389627603aa7e4ef0e266c9d14931125084356111406040870160208801611844565b6111506060880160408901611844565b60608801356038600061116960408c0160208d01611844565b73ffffffffffffffffffffffffffffffffffffffff1681526020810191909152604001600090812080549161119d83611a79565b9091555060408051602081019790975286019490945273ffffffffffffffffffffffffffffffffffffffff92831660608601529116608084015260a083015260c082015260e00161073d565b905060006111fe8261076d6020860186611bc5565b60365490915073ffffffffffffffffffffffffffffffffffffffff80831691161461058f576040517f2d5ffe2500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808373ffffffffffffffffffffffffffffffffffffffff1660008460405161127f9190611c17565b60006040518083038185875af1925050503d80600081146112bc576040519150601f19603f3d011682016040523d82523d6000602084013e6112c1565b606091505b50915091508161130d578051156112db5780518082602001fd5b6040517fd1ca3feb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80511561058f57808060200190518101906113289190611c52565b61058f576040517ff4718c8500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006113cc600154600254604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b6040517f19010000000000000000000000000000000000000000000000000000000000006020820152602281019190915260428101839052606201604051602081830303815290604052805190602001209050919050565b6000806000611435878787876114a7565b91509150611442816115bf565b5095945050505050565b600054610100900460ff1661148d576040517f66b9f31500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b815160209283012081519190920120600191909155600255565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156114de57506000905060036115b6565b8460ff16601b141580156114f657508460ff16601c14155b1561150757506000905060046115b6565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561155b573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff81166115af576000600192509250506115b6565b9150600090505b94509492505050565b60008160048111156115d3576115d3611c74565b036115db5750565b60018160048111156115ef576115ef611c74565b0361165b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064015b60405180910390fd5b600281600481111561166f5761166f611c74565b036116d6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401611652565b60038160048111156116ea576116ea611c74565b03611777576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f75650000000000000000000000000000000000000000000000000000000000006064820152608401611652565b600481600481111561178b5761178b611c74565b03611818576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c60448201527f75650000000000000000000000000000000000000000000000000000000000006064820152608401611652565b50565b803573ffffffffffffffffffffffffffffffffffffffff8116811461183f57600080fd5b919050565b60006020828403121561185657600080fd5b61185f8261181b565b9392505050565b60006080828403121561187857600080fd5b50919050565b60006060828403121561187857600080fd5b60008060e083850312156118a357600080fd5b6118ad8484611866565b91506118bc846080850161187e565b90509250929050565b60008060008061010085870312156118dc57600080fd5b6118e68686611866565b93506118f5866080870161187e565b925060e085013567ffffffffffffffff8082111561191257600080fd5b818701915087601f83011261192657600080fd5b81358181111561193557600080fd5b88602082850101111561194757600080fd5b95989497505060200194505050565b6000806080838503121561196957600080fd5b823567ffffffffffffffff81111561198057600080fd5b61198c85828601611866565b9250506118bc846020850161187e565b600080608083850312156119af57600080fd5b6119b88361181b565b91506118bc846020850161187e565b6000806000606084860312156119dc57600080fd5b6119e58461181b565b92506119f36020850161181b565b9150611a016040850161181b565b90509250925092565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611a3f57600080fd5b83018035915067ffffffffffffffff821115611a5a57600080fd5b6020019150600581901b3603821315611a7257600080fd5b9250929050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611ad1577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b8183526000602080850194508260005b85811015611b215773ffffffffffffffffffffffffffffffffffffffff611b0e8361181b565b1687529582019590820190600101611ae8565b509495945050505050565b89815288602082015260c060408201526000611b4c60c08301898b611ad8565b8281036060840152611b5f81888a611ad8565b905082810360808401528481527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff851115611b9957600080fd5b8460051b808760208401376000910160200190815260a092909201929092529998505050505050505050565b600060208284031215611bd757600080fd5b813560ff8116811461185f57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000825160005b81811015611c385760208186018101518583015201611c1e565b81811115611c47576000828501525b509190910192915050565b600060208284031215611c6457600080fd5b8151801515811461185f57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fdfea164736f6c634300080f000a'

type DiagonalOrgV3ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (
  xs: DiagonalOrgV3ConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class DiagonalOrgV3__factory extends ContractFactory {
  constructor(...args: DiagonalOrgV3ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<DiagonalOrgV3> {
    return super.deploy(overrides || {}) as Promise<DiagonalOrgV3>
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): ethers.providers.TransactionRequest {
    return super.getDeployTransaction(overrides || {})
  }
  override attach(address: string): DiagonalOrgV3 {
    return super.attach(address) as DiagonalOrgV3
  }
  override connect(signer: Signer): DiagonalOrgV3__factory {
    return super.connect(signer) as DiagonalOrgV3__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): DiagonalOrgV3Interface {
    return new utils.Interface(_abi) as DiagonalOrgV3Interface
  }
  static connect(
    address: string,
    signerOrProvider: Signer | ethers.providers.Provider,
  ): DiagonalOrgV3 {
    return new Contract(address, _abi, signerOrProvider) as DiagonalOrgV3
  }
}
